import java.util.Scanner;
import java.util.ArrayList;
import java.util.Date;

class User {
    private String userId;
    private String pin;
    private double balance;

    public User(String userId, String pin, double initialBalance) {
        this.userId = userId;
        this.pin = pin;
        this.balance = initialBalance;
    }

    public String getUserId() {
        return userId;
    }

    public String getPin() {
        return pin;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        balance += amount;
    }

    public void withdraw(double amount) {
        if (balance >= amount) {
            balance -= amount;
        } else {
            System.out.println("Insufficient funds.");
        }
    }

    public void transfer(User recipient, double amount) {
        if (balance >= amount) {
            balance -= amount;
            recipient.deposit(amount);
        } else {
            System.out.println("Insufficient funds.");
        }
    }
}

class Transaction {
    private Date date;
    private String description;
    private double amount;

    public Transaction(String description, double amount) {
        this.description = description;
        this.amount = amount;
    }

    public String toString() {
        return "Description: " + description + "\nAmount: " + amount;
    }
}

public class Main {
    public static void main(String[] args) {
        User user1 = new User("12345", "1234", 1000.0);
        User user2 = new User("54321", "4321", 500.0);

        ArrayList<Transaction> transactionHistory = new ArrayList<>();

        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter User ID: ");
        String userId = scanner.nextLine();
        System.out.print("Enter PIN: ");
        String pin = scanner.nextLine();

        if (userId.equals(user1.getUserId()) && pin.equals(user1.getPin())) {
            while (true) {
                System.out.println("\nATM Menu:");
                System.out.println("1. View Balance");
                System.out.println("2. Deposit");
                System.out.println("3. Withdraw");
                System.out.println("4. Transfer");
                System.out.println("5. View Transaction History");
                System.out.println("6. Quit");
                System.out.print("Enter your choice: ");
                int choice = scanner.nextInt();
                scanner.nextLine();

                switch (choice) {
                    case 1:
                        System.out.println("Your balance: $" + user1.getBalance());
                        break;
                    case 2:
                        System.out.print("Enter deposit amount: $");
                        double depositAmount = scanner.nextDouble();
                        user1.deposit(depositAmount);
                        transactionHistory.add(new Transaction("Deposit", depositAmount));
                        break;
                    case 3:
                        System.out.print("Enter withdrawal amount: $");
                        double withdrawalAmount = scanner.nextDouble();
                        user1.withdraw(withdrawalAmount);
                        transactionHistory.add(new Transaction("Withdrawal", withdrawalAmount));
                        break;
                    case 4:
                        System.out.print("Enter recipient's User ID: ");
                        String recipientId = scanner.nextLine();
                        User recipient = (userId.equals(user1.getUserId())) ? user2 : user1;
                        System.out.print("Enter transfer amount: $");
                        double transferAmount = scanner.nextDouble();
                        user1.transfer(recipient, transferAmount);
                        transactionHistory.add(new Transaction("Transfer to " + recipientId, transferAmount));
                        break;
                    case 5:
                        System.out.println("Transaction History:");
                        for (Transaction transaction : transactionHistory) {
                            System.out.println(transaction.toString());
                        }
                        break;
                    case 6:
                        System.out.println("Thank you for using the ATM. Goodbye!");
                        System.exit(0);
                    default:
                        System.out.println("Invalid choice. Please try again.");
                }
            }
        } else {
            System.out.println("Invalid User ID or PIN. Access denied.");
        }

        scanner.close();
    }
}
